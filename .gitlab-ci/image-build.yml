
build operator jvm image:
  image: registry.gitlab.com/$CI_PROJECT_PATH/$CI_IMAGE_NAME
  stage: image build
  tags:
    - stackgres-runner
  timeout: 1 hour
  script:
    - 'export IMAGE_TAG="${CI_COMMIT_TAG:-"$CI_COMMIT_SHORT_SHA"}-jvm"'
    - 'export OPERATOR_IMAGE_NAME="stackgres/operator:$IMAGE_TAG"'
    - 'export TARGET_OPERATOR_IMAGE_NAME="$CI_REGISTRY/$CI_PROJECT_PATH/$OPERATOR_IMAGE_NAME"'
    - |
      flock /tmp/stackgres-operator-build-jvm-image \
        sh stackgres-k8s/ci/build/build-gitlab.sh operator-jvm-image
    - HASH_OPERATOR_IMAGE_NAME="$(cat stackgres-k8s/ci/build/target/image-hashes.operator-jvm-image)"
    - docker tag "$HASH_OPERATOR_IMAGE_NAME" "$TARGET_OPERATOR_IMAGE_NAME"
    - docker push "$TARGET_OPERATOR_IMAGE_NAME"

build restapi jvm image:
  image: registry.gitlab.com/$CI_PROJECT_PATH/$CI_IMAGE_NAME
  stage: image build
  tags:
    - stackgres-runner
  timeout: 1 hour
  script:
    - 'export IMAGE_TAG="${CI_COMMIT_TAG:-"$CI_COMMIT_SHORT_SHA"}-jvm"'
    - 'export RESTAPI_IMAGE_NAME="stackgres/restapi:$IMAGE_TAG"'
    - 'export TARGET_RESTAPI_IMAGE_NAME="$CI_REGISTRY/$CI_PROJECT_PATH/$RESTAPI_IMAGE_NAME"'
    - |
      flock /tmp/stackgres-restapi-build-jvm-image \
        sh stackgres-k8s/ci/build/build-gitlab.sh restapi-jvm-image
    - HASH_RESTAPI_IMAGE_NAME="$(cat stackgres-k8s/ci/build/target/image-hashes.restapi-jvm-image)"
    - docker tag "$HASH_RESTAPI_IMAGE_NAME" "$TARGET_RESTAPI_IMAGE_NAME"
    - docker push "$TARGET_RESTAPI_IMAGE_NAME"

build jobs jvm image:
  image: registry.gitlab.com/$CI_PROJECT_PATH/$CI_IMAGE_NAME
  stage: image build
  tags:
    - stackgres-runner
  timeout: 1 hour
  script:
    - 'export IMAGE_TAG="${CI_COMMIT_TAG:-"$CI_COMMIT_SHORT_SHA"}-jvm"'
    - 'export JOBS_IMAGE_NAME="stackgres/jobs:$IMAGE_TAG"'
    - 'export TARGET_JOBS_IMAGE_NAME="$CI_REGISTRY/$CI_PROJECT_PATH/$JOBS_IMAGE_NAME"'
    - |
      flock /tmp/stackgres-jobs-build-jvm-image \
        sh stackgres-k8s/ci/build/build-gitlab.sh jobs-jvm-image
    - HASH_JOBS_IMAGE_NAME="$(cat stackgres-k8s/ci/build/target/image-hashes.jobs-jvm-image)"
    - docker tag "$HASH_JOBS_IMAGE_NAME" "$TARGET_JOBS_IMAGE_NAME"
    - docker push "$TARGET_JOBS_IMAGE_NAME"

build cluster-controller jvm image:
  image: registry.gitlab.com/$CI_PROJECT_PATH/$CI_IMAGE_NAME
  stage: image build
  tags:
    - stackgres-runner
  timeout: 1 hour
  script:
    - 'export IMAGE_TAG="${CI_COMMIT_TAG:-"$CI_COMMIT_SHORT_SHA"}-jvm"'
    - 'export CLUSTER_CONTROLLER_IMAGE_NAME="stackgres/cluster-controller:$IMAGE_TAG"'
    - 'export TARGET_CLUSTER_CONTROLLER_IMAGE_NAME="$CI_REGISTRY/$CI_PROJECT_PATH/$CLUSTER_CONTROLLER_IMAGE_NAME"'
    - |
      flock /tmp/stackgres-cluster-controller-build-jvm-image \
        sh stackgres-k8s/ci/build/build-gitlab.sh cluster-controller-jvm-image
    - HASH_CLUSTER_CONTROLLER_IMAGE_NAME="$(cat stackgres-k8s/ci/build/target/image-hashes.cluster-controller-jvm-image)"
    - docker tag "$HASH_CLUSTER_CONTROLLER_IMAGE_NAME" "$TARGET_CLUSTER_CONTROLLER_IMAGE_NAME"
    - docker push "$TARGET_CLUSTER_CONTROLLER_IMAGE_NAME"

build distributedlogs-controller jvm image:
  image: registry.gitlab.com/$CI_PROJECT_PATH/$CI_IMAGE_NAME
  stage: image build
  tags:
    - stackgres-runner
  timeout: 1 hour
  script:
    - 'export IMAGE_TAG="${CI_COMMIT_TAG:-"$CI_COMMIT_SHORT_SHA"}-jvm"'
    - 'export DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME="stackgres/distributedlogs-controller:$IMAGE_TAG"'
    - 'export TARGET_DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME="$CI_REGISTRY/$CI_PROJECT_PATH/$DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME"'
    - |
      flock /tmp/stackgres-distributedlogs-controller-build-jvm-image \
        sh stackgres-k8s/ci/build/build-gitlab.sh distributedlogs-controller-jvm-image
    - HASH_DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME="$(cat stackgres-k8s/ci/build/target/image-hashes.distributedlogs-controller-jvm-image)"
    - docker tag "$HASH_DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME" "$TARGET_DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME"
    - docker push "$TARGET_DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME"

build operator native image:
  image: registry.gitlab.com/$CI_PROJECT_PATH/$CI_IMAGE_NAME
  stage: image build
  tags:
    - stackgres-runner
  timeout: 1 hour
  script:
    - 'export IMAGE_TAG="${CI_COMMIT_TAG:-"$CI_COMMIT_SHORT_SHA"}"'
    - 'export OPERATOR_IMAGE_NAME="stackgres/operator:$IMAGE_TAG"'
    - 'export TARGET_OPERATOR_IMAGE_NAME="$CI_REGISTRY/$CI_PROJECT_PATH/$OPERATOR_IMAGE_NAME"'
    - |
      flock /tmp/stackgres-operator-build-native-image \
        sh stackgres-k8s/ci/build/build-gitlab.sh operator-native-image
    - HASH_OPERATOR_IMAGE_NAME="$(cat stackgres-k8s/ci/build/target/image-hashes.operator-native-image)"
    - docker tag "$HASH_OPERATOR_IMAGE_NAME" "$TARGET_OPERATOR_IMAGE_NAME"
    - docker push "$TARGET_OPERATOR_IMAGE_NAME"
  only:
    variables:
      - $SKIP_NATIVE != "true" && $CI_COMMIT_REF_NAME =~ /^development.*$/
      - $SKIP_NATIVE != "true" && $CI_COMMIT_REF_NAME == "master"
      - $SKIP_NATIVE != "true" && $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^latest-.*$/
      - $DO_DEPLOY
      - $DO_NATIVE

build restapi native image:
  image: registry.gitlab.com/$CI_PROJECT_PATH/$CI_IMAGE_NAME
  stage: image build
  tags:
    - stackgres-runner
  timeout: 1 hour
  script:
    - 'export IMAGE_TAG="${CI_COMMIT_TAG:-"$CI_COMMIT_SHORT_SHA"}"'
    - 'export RESTAPI_IMAGE_NAME="stackgres/restapi:$IMAGE_TAG"'
    - 'export TARGET_RESTAPI_IMAGE_NAME="$CI_REGISTRY/$CI_PROJECT_PATH/$RESTAPI_IMAGE_NAME"'
    - |
      flock /tmp/stackgres-restapi-build-native-image \
        sh stackgres-k8s/ci/build/build-gitlab.sh restapi-native-image
    - HASH_RESTAPI_IMAGE_NAME="$(cat stackgres-k8s/ci/build/target/image-hashes.restapi-native-image)"
    - docker tag "$HASH_RESTAPI_IMAGE_NAME" "$TARGET_RESTAPI_IMAGE_NAME"
    - docker push "$TARGET_RESTAPI_IMAGE_NAME"
  only:
    variables:
      - $SKIP_NATIVE != "true" && $CI_COMMIT_REF_NAME =~ /^development.*$/
      - $SKIP_NATIVE != "true" && $CI_COMMIT_REF_NAME == "master"
      - $SKIP_NATIVE != "true" && $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^latest-.*$/
      - $DO_DEPLOY
      - $DO_NATIVE

build jobs native image:
  image: registry.gitlab.com/$CI_PROJECT_PATH/$CI_IMAGE_NAME
  stage: image build
  tags:
    - stackgres-runner
  timeout: 1 hour
  script:
    - 'export IMAGE_TAG="${CI_COMMIT_TAG:-"$CI_COMMIT_SHORT_SHA"}"'
    - 'export JOBS_IMAGE_NAME="stackgres/jobs:$IMAGE_TAG"'
    - 'export TARGET_JOBS_IMAGE_NAME="$CI_REGISTRY/$CI_PROJECT_PATH/$JOBS_IMAGE_NAME"'
    - |
      flock /tmp/stackgres-jobs-build-native-image \
        sh stackgres-k8s/ci/build/build-gitlab.sh jobs-native-image
    - HASH_JOBS_IMAGE_NAME="$(cat stackgres-k8s/ci/build/target/image-hashes.jobs-native-image)"
    - docker tag "$HASH_JOBS_IMAGE_NAME" "$TARGET_JOBS_IMAGE_NAME"
    - docker push "$TARGET_JOBS_IMAGE_NAME"
  only:
    variables:
      - $SKIP_NATIVE != "true" && $CI_COMMIT_REF_NAME =~ /^development.*$/
      - $SKIP_NATIVE != "true" && $CI_COMMIT_REF_NAME == "master"
      - $SKIP_NATIVE != "true" && $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^latest-.*$/
      - $DO_DEPLOY
      - $DO_NATIVE

build cluster-controller native image:
  image: registry.gitlab.com/$CI_PROJECT_PATH/$CI_IMAGE_NAME
  stage: image build
  tags:
    - stackgres-runner
  timeout: 1 hour
  script:
    - 'export IMAGE_TAG="${CI_COMMIT_TAG:-"$CI_COMMIT_SHORT_SHA"}"'
    - 'export CLUSTER_CONTROLLER_IMAGE_NAME="stackgres/cluster-controller:$IMAGE_TAG"'
    - 'export TARGET_CLUSTER_CONTROLLER_IMAGE_NAME="$CI_REGISTRY/$CI_PROJECT_PATH/$CLUSTER_CONTROLLER_IMAGE_NAME"'
    - |
      flock /tmp/stackgres-cluster-controller-build-native-image \
        sh stackgres-k8s/ci/build/build-gitlab.sh cluster-controller-native-image
    - HASH_CLUSTER_CONTROLLER_IMAGE_NAME="$(cat stackgres-k8s/ci/build/target/image-hashes.cluster-controller-native-image)"
    - docker tag "$HASH_CLUSTER_CONTROLLER_IMAGE_NAME" "$TARGET_CLUSTER_CONTROLLER_IMAGE_NAME"
    - docker push "$TARGET_CLUSTER_CONTROLLER_IMAGE_NAME"
  only:
    variables:
      - $SKIP_NATIVE != "true" && $CI_COMMIT_REF_NAME =~ /^development.*$/
      - $SKIP_NATIVE != "true" && $CI_COMMIT_REF_NAME == "master"
      - $SKIP_NATIVE != "true" && $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^latest-.*$/
      - $DO_DEPLOY
      - $DO_NATIVE

build distributedlogs-controller native image:
  image: registry.gitlab.com/$CI_PROJECT_PATH/$CI_IMAGE_NAME
  stage: image build
  tags:
    - stackgres-runner
  timeout: 1 hour
  script:
    - 'export IMAGE_TAG="${CI_COMMIT_TAG:-"$CI_COMMIT_SHORT_SHA"}"'
    - 'export DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME="stackgres/distributedlogs-controller:$IMAGE_TAG"'
    - 'export TARGET_DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME="$CI_REGISTRY/$CI_PROJECT_PATH/$DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME"'
    - |
      flock /tmp/stackgres-distributedlogs-controller-build-native-image \
        sh stackgres-k8s/ci/build/build-gitlab.sh distributedlogs-controller-native-image
    - HASH_DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME="$(cat stackgres-k8s/ci/build/target/image-hashes.distributedlogs-controller-native-image)"
    - docker tag "$HASH_DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME" "$TARGET_DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME"
    - docker push "$TARGET_DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME"
  only:
    variables:
      - $SKIP_NATIVE != "true" && $CI_COMMIT_REF_NAME =~ /^development.*$/
      - $SKIP_NATIVE != "true" && $CI_COMMIT_REF_NAME == "master"
      - $SKIP_NATIVE != "true" && $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^latest-.*$/
      - $DO_DEPLOY
      - $DO_NATIVE

build admin-ui image:
  image: registry.gitlab.com/$CI_PROJECT_PATH/$CI_IMAGE_NAME
  stage: image build
  tags:
    - stackgres-runner
  timeout: 1 hour
  script:
    - 'export IMAGE_TAG="${CI_COMMIT_TAG:-"$CI_COMMIT_SHORT_SHA"}"'
    - 'export ADMINUI_IMAGE_NAME="stackgres/admin-ui:$IMAGE_TAG"'
    - 'export TARGET_ADMINUI_IMAGE_NAME="$CI_REGISTRY/$CI_PROJECT_PATH/$ADMINUI_IMAGE_NAME"'
    - |
      flock /tmp/stackgres-adminui-build-image \
        sh stackgres-k8s/ci/build/build-gitlab.sh admin-ui-image
    - HASH_ADMINUI_IMAGE_NAME="$(cat stackgres-k8s/ci/build/target/image-hashes.admin-ui-image)"
    - docker tag "$HASH_ADMINUI_IMAGE_NAME" "$TARGET_ADMINUI_IMAGE_NAME"
    - docker push "$TARGET_ADMINUI_IMAGE_NAME"
