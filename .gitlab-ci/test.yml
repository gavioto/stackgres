shell unit tests:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/$IT_IMAGE_NAME
  stage: test
  tags:
    - stackgres-runner
  script:
    - |
      set +e
      TMP_PATH="/tmp/stackgres-$JOB_ID"
      cp -a . "$TMP_PATH"
      (
        cd "$TMP_PATH"
        sh stackgres-k8s/src/operator/src/test/shell/run-in-docker.sh
      )
      EXIT_CODE="$?"
      cp -a "$TMP_PATH"/stackgres-k8s/src/operator/target stackgres-k8s/src/operator/target
      rm -rf "$TMP_PATH"
      exit "$EXIT_CODE"
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - stackgres-k8s/src/operator/target/shell
    reports:
      junit:
        - stackgres-k8s/src/operator/target/shell/shell-unit-tests-junit-report-*.xml

swagger validations:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/$IT_IMAGE_NAME
  stage: test
  tags:
    - stackgres-runner
  script:
    - |
      yajsv -s stackgres-k8s/src/api-web/src/main/swagger/schema.json stackgres-k8s/src/api-web/target/swagger-merged.json
  dependencies:
    - build
  artifacts:
    expire_in: 1 week
    when: always

.e2e tests:
  stage: test
  image: $CI_REGISTRY/$CI_PROJECT_PATH/$IT_IMAGE_NAME
  tags:
    - stackgres-runner
  dependencies:
    - build
    - build helm packages
    - build helm templates
  variables:
    IMAGE_TAG_SUFFIX: ""
    E2E_SUFFIX: ""
    IS_NATIVE: "false"
    IS_WEB: "false"
  timeout: 12 hour
  script:
    - set -e
    - test "$E2E_JOBS" -ge 1 && test "$E2E_JOBS" -le 6
    - test "$E2E_EXCLUSIVE_JOBS" -ge 1 && test "$E2E_EXCLUSIVE_JOBS" -le 6
    - test "$DEBUG" != true || set -x
    - SUFFIX="$(echo "-$E2E_SUFFIX-$E2E_RUN_ONLY" | tr -d '\n' | tr -c 'a-z0-9' '-' | sed 's/\(-[0-9]\+\)-[0-9]\+$/\1/')"
    - SHELL_XTRACE="$([ "$E2E_DEBUG" = true ] && echo "-x" || echo "")"
    - export IMAGE_TAG_BASE="${CI_COMMIT_TAG:-"$CI_COMMIT_SHORT_SHA"}"
    - export IMAGE_TAG="$IMAGE_TAG_BASE$IMAGE_TAG_SUFFIX"
    - export KIND_NAME="kind$SUFFIX"
    - export K8S_REUSE="${K8S_REUSE:-true}"
    - export K8S_FROM_DIND=true
    - export E2E_BUILD_IMAGES=false
    - export E2E_WAIT_OPERATOR=false
    - export E2E_PULLED_IMAGES_PATH="/tmp/pulled-images$SUFFIX"
    - export E2E_OPERATOR_REGISTRY=$CI_REGISTRY
    - export E2E_OPERATOR_REGISTRY_PATH=/$CI_PROJECT_PATH/
    - export E2E_FORCE_IMAGE_PULL=true
    - export K8S_USE_INTERNAL_REPOSITORY=true
    - |
      if [ "$K8S_REUSE" = false ]
      then
        export K8S_DELETE=true
        export E2E_SPEC_TRY_UNINSTALL_ON_FAILURE=true
      fi
    - export KIND_LOCK_PATH="/tmp/kind-lock$SUFFIX"
    - export KIND_CONTAINERD_CACHE_PATH="/tmp/kind-cache/$KIND_NAME"
    - |
      if [ "$E2E_CLEAN_IMAGE_CACHE" = "true" ]
      then
        rm -rf "$E2E_PULLED_IMAGES_PATH"
      fi
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - |
      if docker manifest inspect \
        "$CI_REGISTRY/$CI_PROJECT_PATH/stackgres/operator:$IMAGE_TAG_BASE" >/dev/null 2>&1
      then
        IMAGE_TAGS="$IMAGE_TAG_BASE-jvm $IMAGE_TAG_BASE"
      else
        IMAGE_TAGS="$IMAGE_TAG_BASE-jvm"
      fi
      if sh stackgres-k8s/ci/test/e2e-shared-cache-requires-reset.sh
      then
        flock /tmp/e2e-create-kind-cache-base \
          sh stackgres-k8s/ci/test/e2e-create-kind-cache-base.sh
      else
        sh stackgres-k8s/ci/test/e2e-create-kind-cache-base.sh
      fi
    - |
      if "$IS_WEB"
      then
        E2E_TEST=ui
      fi
      if [ -n "$E2E_TEST" ]
      then
        export E2E_ONLY_INCLUDES="$E2E_TEST"
      fi
    - |
      export IS_WEB
      export IS_NATIVE
      E2E_EXCLUDES_BY_HASH="$(flock /tmp/e2e-retrieve-pipeline-info.lock \
        timeout -s KILL 300 \
        sh stackgres-k8s/ci/test/e2e-already-passed-gitlab.sh || true)"
      if echo "$E2E_EXCLUDES_BY_HASH" | grep -q '[^ ]'
      then
        echo "Excluding following tests since already passed:"
        echo
        printf '%s' "$E2E_EXCLUDES_BY_HASH" | tr ' ' '\n' | grep -v '^$' \
          | while read E2E_EXCLUDED_TEST
            do
              printf ' - %s\n' "$E2E_EXCLUDED_TEST"
            done
        echo
      fi
      E2E_EXCLUDES="$(echo "$("$IS_WEB" || echo "ui ")$E2E_EXCLUDES $E2E_EXCLUDES_BY_HASH" | tr ' ' '\n' | sort | uniq | tr '\n' ' ')"
      export E2E_EXCLUDES
    - flock /tmp/e2e-retrieve-pipeline-info.lock timeout -s KILL 300 sh stackgres-k8s/ci/test/e2e-variables.sh || true
    - |
      unset DEBUG
      flock -s /tmp/e2e-create-kind-cache-base \
        flock -s /tmp/stackgres-build-operator-native-executable \
        flock -s /tmp/stackgres-build-restapi-native-executable \
        flock -s /tmp/stackgres-build-jobs-native-executable \
        flock -s /tmp/stackgres-build-distributedlogs-controller-native-executable \
        flock "/tmp/stackgres-integration-test$SUFFIX" \
        timeout -s KILL 1800 \
        "$E2E_SHELL" $SHELL_XTRACE stackgres-k8s/e2e/run-all-tests.sh
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - stackgres-k8s/e2e/target
    reports:
      junit:
        - stackgres-k8s/e2e/target/e2e-tests-junit-report.xml

.e2e tests jvm:
  extends: .e2e tests
  variables:
    E2E_SUFFIX: "jvm-image"
    IMAGE_TAG_SUFFIX: "-jvm"
  only:
    variables:
      - $SKIP_E2E != "true"
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - stackgres-k8s/e2e/target

e2e tests jvm 1:
  extends: .e2e tests jvm
  variables:
    E2E_RUN_ONLY: non_exclusive:1/$E2E_JOBS

e2e tests jvm 2:
  extends: .e2e tests jvm
  variables:
    E2E_RUN_ONLY: non_exclusive:2/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[1]$/

e2e tests jvm 3:
  extends: .e2e tests jvm
  variables:
    E2E_RUN_ONLY: non_exclusive:3/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[12]$/

e2e tests jvm 4:
  extends: .e2e tests jvm
  variables:
    E2E_RUN_ONLY: non_exclusive:4/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[123]$/

e2e tests jvm 5:
  extends: .e2e tests jvm
  variables:
    E2E_RUN_ONLY: non_exclusive:5/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[1234]$/

e2e tests jvm 6:
  extends: .e2e tests jvm
  variables:
    E2E_RUN_ONLY: non_exclusive:6/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[12345]$/

e2e ex tests jvm 1:
  extends: .e2e tests jvm
  variables:
    E2E_RUN_ONLY: exclusive:1/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST

e2e ex tests jvm 2:
  extends: .e2e tests jvm
  variables:
    E2E_RUN_ONLY: exclusive:2/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[1]$/

e2e ex tests jvm 3:
  extends: .e2e tests jvm
  variables:
    E2E_RUN_ONLY: exclusive:3/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[12]$/

e2e ex tests jvm 4:
  extends: .e2e tests jvm
  variables:
    E2E_RUN_ONLY: exclusive:4/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[123]$/

e2e ex tests jvm 5:
  extends: .e2e tests jvm
  variables:
    E2E_RUN_ONLY: exclusive:5/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[1234]$/

e2e ex tests jvm 6:
  extends: .e2e tests jvm
  variables:
    E2E_RUN_ONLY: exclusive:6/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[12345]$/

e2e ui tests jvm:
  extends: .e2e tests jvm
  variables:
    E2E_SKIP_OPERATOR_INSTALL: "true"
    E2E_RUN_ONLY: ui:1/1
    IS_WEB: "true"
  except:
    variables:
      - $E2E_TEST

.e2e tests native:
  extends: .e2e tests
  variables:
    E2E_SUFFIX: "native-image"
    IMAGE_TAG_SUFFIX: ""
    IS_NATIVE: "true"
  only:
    variables:
      - $SKIP_E2E != "true" && $SKIP_NATIVE != "true" && $CI_COMMIT_REF_NAME =~ /^development.*$/
      - $SKIP_E2E != "true" && $SKIP_NATIVE != "true" && $CI_COMMIT_REF_NAME == "master"
      - $SKIP_E2E != "true" && $SKIP_NATIVE != "true" && $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^latest-.*$/
      - $DO_DEPLOY
      - $DO_NATIVE
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - stackgres-k8s/e2e/target

e2e tests native 1:
  extends: .e2e tests native
  variables:
    E2E_RUN_ONLY: non_exclusive:1/$E2E_JOBS

e2e tests native 2:
  extends: .e2e tests native
  variables:
    E2E_RUN_ONLY: non_exclusive:2/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[1]$/

e2e tests native 3:
  extends: .e2e tests native
  variables:
    E2E_RUN_ONLY: non_exclusive:2/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[12]$/

e2e tests native 4:
  extends: .e2e tests native
  variables:
    E2E_RUN_ONLY: non_exclusive:2/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[123]$/

e2e tests native 5:
  extends: .e2e tests native
  variables:
    E2E_RUN_ONLY: non_exclusive:2/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[1234]$/

e2e tests native 6:
  extends: .e2e tests native
  variables:
    E2E_RUN_ONLY: non_exclusive:2/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[12345]$/

e2e ex tests native 1:
  extends: .e2e tests native
  variables:
    E2E_RUN_ONLY: exclusive:1/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST

e2e ex tests native 2:
  extends: .e2e tests native
  variables:
    E2E_RUN_ONLY: exclusive:2/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[1]$/

e2e ex tests native 3:
  extends: .e2e tests native
  variables:
    E2E_RUN_ONLY: exclusive:3/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[12]$/

e2e ex tests native 4:
  extends: .e2e tests native
  variables:
    E2E_RUN_ONLY: exclusive:4/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[123]$/

e2e ex tests native 5:
  extends: .e2e tests native
  variables:
    E2E_RUN_ONLY: exclusive:5/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[1234]$/

e2e ex tests native 6:
  extends: .e2e tests native
  variables:
    E2E_RUN_ONLY: exclusive:6/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[12345]$/

e2e ui tests native:
  extends: .e2e tests native
  variables:
    E2E_SKIP_OPERATOR_INSTALL: "true"
    E2E_RUN_ONLY: ui:1/1
    IS_WEB: "true"
  except:
    variables:
      - $E2E_TEST
