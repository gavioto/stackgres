build:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/$SG_CI_IMAGE_NAME
  stage: build 1
  tags:
    - stackgres-runner
    - stackgres-maven-runner
  script:
    - |
      sh stackgres-k8s/ci/build/build-gitlab.sh build \
        --copy stackgres-k8s/src/.mvn \
        --copy .m2/repository \
        --extract stackgres:'stackgres-k8s/src/operator-framework/target/surefire-reports/TEST-*.xml' \
        --extract stackgres:'stackgres-k8s/src/common/target/surefire-reports/TEST-*.xml' \
        --extract stackgres:'stackgres-k8s/src/operator/target/surefire-reports/TEST-*.xml' \
        --extract stackgres:'stackgres-k8s/src/api-web/target/surefire-reports/TEST-*.xml' \
        --extract stackgres:'stackgres-k8s/src/jobs/target/surefire-reports/TEST-*.xml' \
        --extract stackgres:'stackgres-k8s/src/cluster-controller/target/surefire-reports/TEST-*.xml' \
        --extract stackgres:'stackgres-k8s/src/distributedlogs-controller/target/surefire-reports/TEST-*.xml' \
        --extract restapi:'stackgres-k8s/src/api-web/target/swagger*' \
        stackgres
  cache:
    paths:
      - .m2/repository
      - stackgres-k8s/src/.mvn
  artifacts:
    expire_in: 1 week
    when: always
    reports:
      junit:
        - stackgres-k8s/ci/build/target/junit-build.hashes.xml
        - stackgres-k8s/src/*/target/surefire-reports/TEST-*.xml
        - stackgres-k8s/src/api-web/target/swagger*

build ui:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/$SG_CI_IMAGE_NAME
  stage: build 2
  tags:
    - stackgres-runner
  script:
    - |
      sh stackgres-k8s/ci/build/build-gitlab.sh build \
        --copy stackgres-k8s/src/admin-ui/node_modules \
        admin-ui
  cache:
    paths:
      - stackgres-k8s/src/admin-ui/node_modules


build documentation:
  image:
    name: klakegg/hugo:0.81.0-ubuntu
    entrypoint: [ "" ]
  stage: build 2
  dependencies:
    - build restapi
  script:
    - sh -x doc/build.sh
    - |
      STACKGRES_VERSION="$(
        grep '<artifactId>stackgres-parent</artifactId>' "stackgres-k8s/src/pom.xml" -A 2 -B 2 \
          | sed -n 's/^.*<version>\([^<]\+\)<\/version>.*$/\1/p')"
      STACKGRES_DOC_VERSION="$(
        printf "%s" "$STACKGRES_VERSION" | cut -d . -f 1-2)$(printf "%s" "$STACKGRES_VERSION" \
          | grep -q ".-SNAPSHOT$" && printf "%s" "-dev" || true)"
    - |
      DOCUMENTATION_EXTRA_PATH=""
      if [[ ! -z "$CI_COMMIT_TAG" && ! "$CI_COMMIT_TAG" =~ ^latest-.*$ ]]
      then
        DOCUMENTATION_BASE_URL="https://stackgres.io/doc"
      else
        DOCUMENTATION_BASE_URL="https://ongresinc.gitlab.io/stackgres"
        if [ "${CI_COMMIT_REF_NAME%%-*}" != "development" ] && [ "${CI_COMMIT_REF_NAME%%-*}" != "master" ]
        then
          DOCUMENTATION_EXTRA_PATH="$CI_COMMIT_REF_NAME/"
        fi
      fi
    - mkdir -p "doc/public/$DOCUMENTATION_EXTRA_PATH$STACKGRES_VERSION"
    - hugo -v --source doc --destination "$(pwd)/doc/public/$DOCUMENTATION_EXTRA_PATH$STACKGRES_DOC_VERSION" --baseURL="$DOCUMENTATION_BASE_URL/$DOCUMENTATION_EXTRA_PATH$STACKGRES_DOC_VERSION"
    - |
      if ( [[ ! -z "$CI_COMMIT_TAG" && ! "$CI_COMMIT_TAG" =~ ^latest-.*$ ]] \
          || [ "${CI_COMMIT_REF_NAME%%-*}" = "development" ] || [ "${CI_COMMIT_REF_NAME%%-*}" = "master" ] ) \
        && [ "$LATEST" = true ]
      then
        hugo -v --source doc --destination "$(pwd)/doc/public/latest" --baseURL="$DOCUMENTATION_BASE_URL/latest"
      fi
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - doc/public

build helm packages:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/$SG_CI_IMAGE_NAME
  stage: build 2
  tags:
    - stackgres-runner
  script:
    - sh stackgres-k8s/ci/build/build-gitlab.sh build helm-packages

build helm templates:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/$SG_CI_IMAGE_NAME
  stage: build 2
  tags:
    - stackgres-runner
  script:
    - sh stackgres-k8s/ci/build/build-gitlab.sh build helm-templates
