build:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/$BUILD_IMAGE_NAME
  stage: build 1
  tags:
    - stackgres-runner
    - stackgres-maven-runner
  script:
    - |
      sh stackgres-k8s/ci/build/build-gitlab.sh \
        stackgres-parent \
        operator-framework \
        test-util \
        common
  cache:
    paths:
      - stackgres-k8s/src/.m2/repository
      - stackgres-k8s/src/.mvn
  artifacts:
    expire_in: 1 week
    when: always
    reports:
      junit:
        - stackgres-k8s/ci/build/target/junit-build.hashes.xml
        - stackgres-k8s/src/*/target/surefire-reports/TEST-*.xml

build operator:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/$BUILD_IMAGE_NAME
  stage: build 2
  tags:
    - stackgres-runner
  script:
    - |
      sh stackgres-k8s/ci/build/build-gitlab.sh \
        operator
  cache:
    paths:
      - stackgres-k8s/src/.m2/repository
      - stackgres-k8s/src/.mvn

build restapi:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/$BUILD_IMAGE_NAME
  stage: build 2
  tags:
    - stackgres-runner
  script:
    - |
      sh stackgres-k8s/ci/build/build-gitlab.sh \
        restapi
  cache:
    paths:
      - stackgres-k8s/src/.m2/repository
      - stackgres-k8s/src/.mvn
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - stackgres-k8s/src/api-web/target/swagger*

build jobs:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/$BUILD_IMAGE_NAME
  stage: build 2
  tags:
    - stackgres-runner
  script:
    - |
      sh stackgres-k8s/ci/build/build-gitlab.sh \
        jobs
  cache:
    paths:
      - stackgres-k8s/src/.m2/repository
      - stackgres-k8s/src/.mvn

build cluster-controller:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/$BUILD_IMAGE_NAME
  stage: build 2
  tags:
    - stackgres-runner
  script:
    - |
      sh stackgres-k8s/ci/build/build-gitlab.sh \
        cluster-controller
  cache:
    paths:
      - stackgres-k8s/src/.m2/repository
      - stackgres-k8s/src/.mvn

build distributedlogs-controller:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/$BUILD_IMAGE_NAME
  stage: build 2
  tags:
    - stackgres-runner
  script:
    - |
      sh stackgres-k8s/ci/build/build-gitlab.sh \
        distributedlogs-controller
  cache:
    paths:
      - stackgres-k8s/src/.m2/repository
      - stackgres-k8s/src/.mvn

build ui:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/$BUILD_IMAGE_NAME
  stage: build 3
  tags:
    - stackgres-runner
  script:
    - sh stackgres-k8s/ci/build/build-gitlab.sh admin-ui
  cache:
    paths:
      - stackgres-k8s/src/admin-ui/node_modules


build documentation:
  image:
    name: klakegg/hugo:0.81.0-ubuntu
    entrypoint: [ "" ]
  stage: build 3
  dependencies:
    - build restapi
  script:
  - sh -x doc/build.sh
  - |
    STACKGRES_VERSION="$(
      grep '<artifactId>stackgres-parent</artifactId>' "stackgres-k8s/src/pom.xml" -A 2 -B 2 \
        | sed -n 's/^.*<version>\([^<]\+\)<\/version>.*$/\1/p')"
    STACKGRES_DOC_VERSION="$(
      printf "%s" "$STACKGRES_VERSION" | cut -d . -f 1-2)$(printf "%s" "$STACKGRES_VERSION" \
        | grep -q ".-SNAPSHOT$" && printf "%s" "-dev" || true)"
  - |
    DOCUMENTATION_EXTRA_PATH=""
    if [[ ! -z "$CI_COMMIT_TAG" && ! "$CI_COMMIT_TAG" =~ ^latest-.*$ ]]
    then
      DOCUMENTATION_BASE_URL="https://stackgres.io/doc"
    else
      DOCUMENTATION_BASE_URL="https://ongresinc.gitlab.io/stackgres"
      if [ "${CI_COMMIT_REF_NAME%%-*}" != "development" ] && [ "${CI_COMMIT_REF_NAME%%-*}" != "master" ]
      then
        DOCUMENTATION_EXTRA_PATH="$CI_COMMIT_REF_NAME/"
      fi
    fi
  - mkdir -p "doc/public/$DOCUMENTATION_EXTRA_PATH$STACKGRES_VERSION"
  - hugo -v --source doc --destination "$(pwd)/doc/public/$DOCUMENTATION_EXTRA_PATH$STACKGRES_DOC_VERSION" --baseURL="$DOCUMENTATION_BASE_URL/$DOCUMENTATION_EXTRA_PATH$STACKGRES_DOC_VERSION"
  - |
    if ( [[ ! -z "$CI_COMMIT_TAG" && ! "$CI_COMMIT_TAG" =~ ^latest-.*$ ]] \
        || [ "${CI_COMMIT_REF_NAME%%-*}" = "development" ] || [ "${CI_COMMIT_REF_NAME%%-*}" = "master" ] ) \
      && [ "$LATEST" = true ]
    then
      hugo -v --source doc --destination "$(pwd)/doc/public/latest" --baseURL="$DOCUMENTATION_BASE_URL/latest"
    fi
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - doc/public

build helm packages:
  image: dtzar/helm-kubectl:3.3.1
  stage: build 3
  script:
  - sh -x stackgres-k8s/install/helm/build-helm-packages.sh
  - |
    if [[ ! -z "$CI_COMMIT_TAG" && ! "$CI_COMMIT_TAG" =~ ^latest-.*$ ]]
    then
      cp -a "stackgres-k8s/install/helm/target/public/downloads/stackgres-k8s/stackgres"/* stackgres-k8s/install/helm/target/public/downloads/stackgres-k8s/stackgres/latest
    fi
  - find stackgres-k8s/install/helm/target/public | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/|-\1/"
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - stackgres-k8s/install/helm/target

build helm templates:
  image: dtzar/helm-kubectl:3.3.1
  stage: build 3
  script:
  - sh -x stackgres-k8s/install/helm/build-helm-templates.sh
  - |
    if [[ ! -z "$CI_COMMIT_TAG" && ! "$CI_COMMIT_TAG" =~ ^latest-.*$ ]]
    then
      cp -a "stackgres-k8s/install/helm/target/public/downloads/stackgres-k8s/stackgres"/* stackgres-k8s/install/helm/target/public/downloads/stackgres-k8s/stackgres/latest
    fi
  - find stackgres-k8s/install/helm/target/public | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/|-\1/"
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - stackgres-k8s/install/helm/target
