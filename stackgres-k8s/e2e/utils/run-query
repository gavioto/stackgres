#!/bin/sh

run_query() {
  local NAME="${CLUSTER_NAME}"
  local NAMESPACE="${CLUSTER_NAMESPACE}"
  local QUERY='SELECT 1'
  local PORT=5432
  local HOST=127.0.0.1
  local DATABASE=postgres
  local INSTANCE=0
  local CONTAINER="postgres-util"
  local SSLMODE=prefer

  local opt
  local OPTARG
  local OPTIND

  while getopts ":c:n:i:q:p:h:d:x:k:m:" opt; do
    case $opt in
      c) NAME="$OPTARG"
      ;;
      n) NAMESPACE="$OPTARG"
      ;;
      i) INSTANCE="$OPTARG"
      ;;
      q) QUERY="$OPTARG"
      ;;
      p) PORT="$OPTARG"
      ;;
      h) HOST="$OPTARG"
      ;;
      d) DATABASE="$OPTARG"
      ;;
      x) POD="$OPTARG"
      ;;
      k) CONTAINER="$OPTARG"
      ;;
      m) SSLMODE="$OPTARG"
      ;;
      \?) echo "Invalid option -$OPTARG" >&2
      return 1
      ;;
    esac
  done

  kubectl exec -n "$NAMESPACE" "${POD:-$NAME-$INSTANCE}" -c "$CONTAINER" -- env \
    PGPASSWORD="$(kubectl -n "$NAMESPACE" get secrets "$NAME" \
      -o jsonpath='{.data.superuser-password}' | base64 -d)" \
    PGCONNECT_TIMEOUT="$((5 + E2E_TIMEOUT / 10))" \
    PGSSLMODE="$SSLMODE" \
    psql -t -A -U postgres -d "$DATABASE" -p "$PORT" -h "$HOST" -c "$QUERY"
}

exec_postgresutil() {
  local NAME="${CLUSTER_NAME:-stackgres}"
  local INSTANCE=0
  local NAMESPACE="${CLUSTER_NAMESPACE:-stackgres}"

  local opt
  local OPTARG
  local OPTIND

  while getopts ":c:n:i:q:p:h:d:" opt; do
    case $opt in
      c) NAME="$OPTARG"
      shift 2
      ;;
      n) NAMESPACE="$OPTARG"
      shift 2
      ;;
      i) INSTANCE="$OPTARG"
      shift 2
      ;;
      \?) echo "Invalid option -$OPTARG" >&2
      return 1
      ;;
    esac
  done

  kubectl exec -n "$NAMESPACE" "$NAME-$INSTANCE" -c postgres-util -- sh -c "$@"
}
