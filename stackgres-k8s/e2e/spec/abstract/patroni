#!/bin/sh
patroni_ports_check() {
  if patroni_liveness_check
  then
    echo "SUCCESS. Patroni liveness endpoint is accesible"
  else
    echo "FAIL. Patroni liveness endpoint is not accesible"
    return 1
  fi

  if patroni_readiness_check
  then
    echo "SUCCESS. Patroni readiness endpoint is accesible"
  else
    echo "FAIL. Patroni readiness endpoint is not accesible"
    return 1
  fi
}

patroni_management_check(){
  if patroni_switchover
  then
    echo "FAIL. Patroni switchover was not blocked"
    return 1
  else
    echo "SUCCESS. Patroni switchover was blocked"
  fi
}

patroni_direct_check(){
  if patroni_direct_switchover_check
  then
    echo "FAIL. Patroni direct access was not blocked"
    return 1
  else
    echo "SUCCESS. Patroni direct access was blocked"
  fi
}

patroni_switchover(){
  patroni_curl -e "switchover" -XPOST -d '{"leader":"'"$CLUSTER_NAME-0"'"}' > /dev/null
}

patroni_direct_switchover_check(){
 patroni_curl -e "switchover" -p 8009 -XPOST -d '{"leader":"'"$CLUSTER_NAME-0"'"}' > /dev/null
}

patroni_liveness_check() {
  patroni_curl -e "cluster" > /dev/null
}

patroni_readiness_check() {
  patroni_curl -e "read-only" > /dev/null
}

get_pod_ip(){
  kubectl get pods -n "$CLUSTER_NAMESPACE" "$CLUSTER_NAME"-0 -o wide | tail -n 1 | awk '{ print $6 }'
}

patroni_curl(){
  PORT=8008
  POD_IP=$(get_pod_ip)
  ENPOINT="cluster"

  local opt
  local OPTARG
  local OPTIND

  while getopts ":e:i:p:" opt; do
    case $opt in
      p) PORT="$OPTARG"
      shift 2
      ;;
      i) POD_IP="$OPTARG"
      shift 2
      ;;
      e) ENPOINT="$OPTARG"
      shift 2
      ;;
    esac
  done
  kubectl exec -i -n "$CLUSTER_NAMESPACE" curl -- curl -s "http://$POD_IP:$PORT/$ENPOINT" -f "$@"
}
